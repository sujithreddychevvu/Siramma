
/* ======================== */
/* 
    Ignore the following styles. They are not important to achieve the effect.
    I'm only using them for looks (overall page background/font styles/centering content).
*/
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300&display=swap');

*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
body{
    font-family: 'Poppins', sans-serif;
    background-color: #212534;
    display: grid;
    place-content: center;
    height: 100vh;
}
/* ======================== */
/* Everything here is pretty straight forward so I don't think I have to explain.*/
.button{
    display: inline-block;
    color: #fff;
    text-decoration: none;
    padding: 1px 1px;
    border: 3px solid 
    #3c67e3;
    border-radius: 20px;
}

.button:hover{
    animation: pulsate 3s 
    ease-in-out; /*The pulsate animation is added on hover. You could also add this on .button:focus and it will add it when clicking the button as well.*/
}

@keyframes pulsate {
    /* 
        Here we have two shadows. You can add as many as you want by using different offset values as long as you separate it with a comma.
        The values are as follow: offset-x | offset-y | blur-radius | color
    */
    0%{
        box-shadow: 
        0 0 25px #5ddcff,
        0 0 50px #4e00c2;
    }
}
.button1{
    display: inline-block;
    text-decoration: none;
    font-size: 25px;
    color: #1fe8b6;
    padding: 20px 50px;
    border: 3px solid #1fe8b6;
    position: relative;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.button1::before,
.button1::after{
    content: '';
    position: absolute;
    width: 40px;
    height: 40px;
    border: inherit;
    transition: all .5s ease-in;
}

.button1::before{
    top: -15px;
    left: -15px;
    border-width: 3px 0 0 3px;
}

.button1::after{
    bottom: -15px;
    right: -15px;
    border-width: 0 3px 3px 0;
}

.button1:hover::before,
.button1:hover::after{
    width: calc(100% + 27px);
    height: calc(100% + 27px);
}
.image-txt-container {
  display: flex;
  align-items: center;
  flex-direction: row;
}
*,
::after,
::before {
  box-sizing: border-box;
}
/* fonts */
html {
  font-size: 100%;
} /*16px*/

:root {
  /* colors */
  --primary-100: #e2e0ff;
  --primary-200: #c1beff;
  --primary-300: #a29dff;
  --primary-400: #837dff;
  --primary-500: #645cff;
  --primary-600: #504acc;
  --primary-700: #3c3799;
  --primary-800: #282566;
  --primary-900: #141233;

  /* grey */
  --grey-50: #f8fafc;
  --grey-100: #f1f5f9;
  --grey-200: #e2e8f0;
  --grey-300: #cbd5e1;
  --grey-400: #94a3b8;
  --grey-500: #64748b;
  --grey-600: #475569;
  --grey-700: #334155;
  --grey-800: #1e293b;
  --grey-900: #0f172a;
  /* rest of the colors */
  --black: #222;
  --white: #fff;
  --red-light: #f8d7da;
  --red-dark: #842029;
  --green-light: #d1e7dd;
  --green-dark: #0f5132;

  /* fonts  */
  --headingFont: 'Roboto', sans-serif;
  --bodyFont: 'Nunito', sans-serif;
  --smallText: 0.7em;
  /* rest of the vars */
  --backgroundColor: var(--grey-50);
  --textColor: var(--grey-900);
  --borderRadius: 0.25rem;
  --letterSpacing: 1px;
  --transition: 0.3s ease-in-out all;
  --max-width: 1120px;
  --fixed-width: 600px;

  /* box shadow*/
  --shadow-1: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  --shadow-2: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -1px rgba(0, 0, 0, 0.06);
  --shadow-3: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -2px rgba(0, 0, 0, 0.05);
  --shadow-4: 0 20px 25px -5px rgba(0, 0, 0, 0.1),
    0 10px 10px -5px rgba(0, 0, 0, 0.04);
}

body {
  background: var(--backgroundColor);
  font-family: var(--bodyFont);
  font-weight: 400;
  line-height: 1.75;
  color: var(--textColor);
}

p {
  margin-top: 0;
  margin-bottom: 1.5rem;
  max-width: 40em;
}

h1,
h2,
h3,
h4,
h5 {
  margin: 0;
  margin-bottom: 1.38rem;
  font-family: var(--headingFont);
  font-weight: 400;
  line-height: 1.3;
  text-transform: capitalize;
  letter-spacing: var(--letterSpacing);
}

h1 {
  margin-top: 0;
  font-size: 3.052rem;
}

h2 {
  font-size: 2.441rem;
}

h3 {
  font-size: 1.953rem;
}

h4 {
  font-size: 1.563rem;
}

h5 {
  font-size: 1.25rem;
}

small,
.text-small {
  font-size: var(--smallText);
}

a {
  text-decoration: none;
}
ul {
  list-style-type: none;
  padding: 0;
}

.img {
  width: 100%;
  display: block;
  object-fit: cover;
}
/* buttons */

.btn {
  cursor: pointer;
  color: var(--white);
  background: var(--primary-500);
  border: transparent;
  border-radius: var(--borderRadius);
  letter-spacing: var(--letterSpacing);
  padding: 0.375rem 0.75rem;
  box-shadow: var(--shadow-1);
  transition: var(--transtion);
  text-transform: capitalize;
  display: inline-block;
}
.btn:hover {
  background: var(--primary-700);
  box-shadow: var(--shadow-3);
}
.btn-hipster {
  color: var(--primary-500);
  background: var(--primary-200);
}
.btn-hipster:hover {
  color: var(--primary-200);
  background: var(--primary-700);
}
.btn-block {
  width: 100%;
}

/* alerts */
.alert {
  padding: 0.375rem 0.75rem;
  margin-bottom: 1rem;
  border-color: transparent;
  border-radius: var(--borderRadius);
}

.alert-danger {
  color: var(--red-dark);
  background: var(--red-light);
}
.alert-success {
  color: var(--green-dark);
  background: var(--green-light);
}
/* form */

.form {
  width: 90vw;
  max-width: var(--fixed-width);
  background: var(--white);
  border-radius: var(--borderRadius);
  box-shadow: var(--shadow-2);
  padding: 2rem 2.5rem;
  margin: 3rem auto;
}
.form-label {
  display: block;
  font-size: var(--smallText);
  margin-bottom: 0.5rem;
  text-transform: capitalize;
  letter-spacing: var(--letterSpacing);
}
.form-input,
.form-textarea {
  width: 100%;
  padding: 0.375rem 0.75rem;
  border-radius: var(--borderRadius);
  background: var(--backgroundColor);
  border: 1px solid var(--grey-200);
}

.form-row {
  margin-bottom: 1rem;
}

.form-textarea {
  height: 7rem;
}
::placeholder {
  font-family: inherit;
  color: var(--grey-400);
}
.form-alert {
  color: var(--red-dark);
  letter-spacing: var(--letterSpacing);
  text-transform: capitalize;
}
/* alert */

@keyframes spinner {
  to {
    transform: rotate(360deg);
  }
}

.loading {
  width: 6rem;
  height: 6rem;
  border: 5px solid var(--grey-400);
  border-radius: 50%;
  border-top-color: var(--primary-500);
  animation: spinner 0.6s linear infinite;
}
.loading {
  margin: 0 auto;
}
/* title */

.title {
  text-align: center;
}

.title-underline {
  background: var(--primary-500);
  width: 7rem;
  height: 0.25rem;
  margin: 0 auto;
  margin-top: -1rem;
}

/*
=============== 
Navbar
===============
*/

.navbar {
  display: flex;
  align-items: center;
  justify-content: center;
}
.nav-center {
  width: 90vw;
  max-width: var(--max-width);
}
.nav-header {
  height: 6rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.nav-header img {
  width: 200px;
}
.nav-logo {
  display: flex;
  align-items: flex-end;
}

.nav-btn {
  padding: 0.15rem 0.75rem;
}
.nav-btn i {
  font-size: 1.25rem;
}
.nav-links {
  height: 0;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  transition: var(--transition);
}
.show-links {
  height: 23.9375rem;
}

.nav-link {
  display: block;
  text-align: center;
  font-size: 1.25rem;
  text-transform: capitalize;
  color: var(--grey-900);
  letter-spacing: var(--letterSpacing);
  padding: 1rem 0;
  border-top: 1px solid var(--grey-500);
  transition: var(--transition);
}
.nav-link:hover {
  color: var(--primary-500);
}

.contact-link a {
  padding: 0.15rem 1rem;
}

@media screen and (min-width: 992px) {
  .navbar {
    height: 6rem;
  }
  .nav-center {
    display: flex;
    align-items: center;
  }
  .nav-header {
    padding: 0;
    margin-right: 2rem;
    height: auto;
  }

  .nav-btn {
    display: none;
  }
  .nav-links {
    height: auto !important;
    flex-direction: row;
    align-items: center;
    width: 100%;
  }
  .nav-link {
    padding: 0;
    border-top: none;
    margin-right: 1rem;
    font-size: 1rem;
  }
  .contact-link {
    margin-right: 0;
    margin-left: auto;
  }
}
/*
=============== 
Page
===============
*/

.page {
  width: 90vw;
  max-width: var(--max-width);
  margin: 0 auto;
}
.page {
  padding-top: 2rem;
  min-height: calc(100vh - (6rem + 4rem));
}
/*
=============== 
Footer
===============
*/

.page-footer {
  text-align: center;
  height: 4rem;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--black);
  color: var(--white);
}
.page-footer h5 {
  margin-top: 0;
  margin-bottom: 0;
}
.page-footer p {
  margin-bottom: 0;
}
.page-footer .footer-logo,
.page-footer a {
  color: var(--primary-500);
}
/*
=============== 
Hero
===============
*/

.hero {
  height: 40vh;
  position: relative;
  margin-bottom: 2rem;
  background: url('../assets/main.jpeg') center/cover no-repeat;
  border-radius: var(--borderRadius);
}
.hero-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(0, 0, 0, 0.4);
  border-radius: var(--borderRadius);
}
.hero-text {
  color: var(--white);
  text-align: center;
}

@media only screen and (min-width: 768px) {
  .hero-text h1 {
    font-size: 4rem;
    margin-bottom: 0;
  }
}

/*
=============== 
Recipes 
===============
*/

.recipes-container {
  display: grid;
  gap: 2rem 1rem;
}

.recipes-list {
  display: grid;
  gap: 2rem 1rem;
  padding-bottom: 3rem;
}
.tags-container {
  order: 1;
  display: flex;
  flex-direction: column;
  padding-bottom: 3rem;
  /* background: blue; */
}
.container img:hover{
    transform: scale(1.2);
    border-radius: 40px;
    opacity: 1;
    z-index: 10;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.192);
}
.tags-container h4 {
  margin-bottom: 0.5rem;
  font-weight: 500;
}
.tags-list {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
}




.tags-list a {
  text-transform: capitalize;
  display: block;
  color: var(--grey-500);
  transition: var(--transition);
}
.tags-list a:hover {
  color: var(--primary-500);
}
.recipe {
  display: block;
}
.recipe-img {
  height: 15rem;
  border-radius: var(--borderRadius);
  margin-bottom: 1rem;
}
.recipe h5 {
  margin-bottom: 0;
  margin-top: 0.25rem;
  line-height: 1;
  color: var(--grey-700);
}
.recipe p {
  margin-bottom: 0;
  line-height: 1;
  color: var(--grey-500);
  margin-top: 0.5rem;
  letter-spacing: var(--letterSpacing);
}
@media screen and (min-width: 576px) {
  .recipes-list {
    grid-template-columns: 1fr 1fr;
  }
  .recipe-img {
    height: 10rem;
  }
}

@media screen and (min-width: 992px) {
  .recipes-container {
    grid-template-columns: 200px 1fr;
    gap: 1rem;
  }
  .recipes-list {
    grid-template-columns: 1fr 1fr;
  }

  .recipe p {
    font-size: 0.85rem;
  }
  .tags-container {
    order: 0;
    /* background: blue; */
  }
  .tags-list {
    display: grid;
    grid-template-columns: 1fr;
  }
}

@media screen and (min-width: 1200px) {
  .recipe h5 {
    font-size: 1.15rem;
  }
  .recipes-list {
    grid-template-columns: 1fr 1fr 1fr;
  }
}
/*
=============== 
Error
===============
*/
.error-page {
  text-align: center;
  padding-top: 5rem;
}
.error-page h1 {
  font-size: 9rem;
}
/*
=============== 
About Page
===============
*/

.about-page h2 {
  text-transform: none;
  font-weight: bold;
}
.about-page {
  display: grid;
  gap: 2rem 4rem;
  padding-bottom: 3rem;
}
.about-img {
  border-radius: var(--borderRadius);
  height: 300px;
}

@media screen and (min-width: 992px) {
  .about-page {
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 400px;
    align-items: center;
  }
  .about-img {
    height: 100%;
  }
}

.featured-title {
  text-align: center;
}
/*
=============== 
Contact Page
===============
*/
.contact-form {
  width: 100%;
  margin: 0;
}
.contact-container {
  display: grid;
  gap: 2rem 3rem;
  padding-bottom: 3rem;
}
@media screen and (min-width: 992px) {
  .contact-container {
    grid-template-columns: 1fr 450px;
    align-items: center;
  }
}

/*
=============== 
Tags Page
===============
*/

.tags-wrapper {
  display: grid;
  gap: 2rem;
  padding-bottom: 3rem;
}
.tag {
  background: var(--grey-500);
  border-radius: var(--borderRadius);
  text-align: center;
  color: var(--white);
  transition: var(--transition);
  padding: 0.75rem 0;
}
.tag:hover {
  background: var(--primary-500);
}
.tag h5,
.tag p {
  margin-bottom: 0;
}
.tag h5 {
  font-weight: 600;
}
@media screen and (min-width: 576px) {
  .tags-wrapper {
    grid-template-columns: 1fr 1fr;
  }
}
@media screen and (min-width: 992px) {
  .tags-wrapper {
    grid-template-columns: 1fr 1fr 1fr;
  }
}

/*
=============== 
Recipe Template
===============
*/

.recipe-hero {
  display: grid;
  gap: 3rem;
}

.recipe-hero-img {
  height: 300px;
  border-radius: var(--borderRadius);
}
.recipe-info p {
  color: var(--grey-600);
}
.recipe-icons {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 1rem;
  margin: 2rem 0;
  text-align: center;
}
.recipe-icons i {
  font-size: 1.5rem;
  color: var(--primary-500);
}
.recipe-icons h5,
.recipe-icons p {
  margin-bottom: 0;
  font-size: 0.85em;
}

.recipe-icons p {
  color: var(--grey-600);
}
.recipe-tags {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  font-size: 0.7em;
  font-weight: 600;
}
.recipe-tags a {
  background: var(--primary-500);
  border-radius: var(--borderRadius);
  color: var(--white);
  padding: 0.05rem 0.5rem;
  margin: 0 0.25rem;
  text-transform: capitalize;
}
@media screen and (min-width: 992px) {
  .recipe-hero {
    grid-template-columns: 4fr 5fr;
    align-items: center;
  }
}
.recipe-content {
  padding: 3rem 0;
  display: grid;
  gap: 2rem 5rem;
}
@media screen and (min-width: 992px) {
  .recipe-content {
    grid-template-columns: 2fr 1fr;
  }
}
.single-instruction header {
  display: grid;
  grid-template-columns: auto 1fr;
  gap: 1.5rem;
  align-items: center;
}
.single-instruction header p {
  text-transform: uppercase;
  font-weight: 600;
  color: var(--primary-500);
  margin-bottom: 0;
}
.single-instruction > p {
  color: var(--grey-700);
}

.single-instruction header div {
  height: 2px;
  background: var(--grey-300);
}

.second-column {
  display: grid;
  row-gap: 2rem;
}

.single-ingredient {
  border-bottom: 2px solid var(--grey-300);
  padding-bottom: 0.75rem;
  color: var(--grey-700);
}
.single-tool {
  border-bottom: 2px solid var(--grey-300);
  padding-bottom: 0.75rem;
  color: var(--primary-500);
  text-transform: capitalize;
}

/* ======================== */
.skwbutton{
    display: inline-block;
    text-decoration: none;
    text-transform: uppercase;
    letter-spacing: 2px;
    color: #fff;
    outline: 2px solid #fff;
    padding: 30px 60px;
    margin-left: 30px;
    position: relative;
    justify-content: center;
    overflow: hidden;
    transition: color 1s;
}

.skwbutton:hover{
    color: #833ab4;
}

.skwbutton::before{
    content: '';
    position: absolute;
    top: 0;
    left: -50px;
    width: 150%;
    height: 100%;
    justify-content: center;
    background-color: rgb(11, 11, 11);
    transform: scaleX(0) skewX(35deg);
    transform-origin: left;
    z-index: -1;
    transition: transform 1s;
}

.skwbutton:hover::before{
    transform: scaleX(1) skewX(35deg);
}
.bdrcard{
  color: #fff;
  text-align: center;
  background-color: #151515; /*Background color of the card. We have to set one so the gradient background does not show through allowing for the border effect.*/
  padding: 25px;
  border-radius: 8px; /*Rounds the corners a little.*/
  position: relative; /*Position of relative because we will use position of absolute on the pseudo-element. This will make it so that the pseudo-element will not float away from the card.*/
}
/*Creating the gradient border with a pseudo-element. */
.bdrcard::before{
  content: ''; /*Set the content property to an empty string, if you don't set a content the element won't show.*/
  position: absolute; /*Allows for this element to be freely moved within the parent box that has relative position.*/
  top: 0;
  left: 0;
  width: calc(100% + 8px); /* We make this element 100% of the card with and height and add 8px so make it slightly larger.*/
  height: calc(100% + 8px);
  transform: translate(-4px, -4px); /*Now we use a negative translation to center this element in terms of the card. We use half of the extra 8px we gave it for width and height.*/
  background: linear-gradient(60deg, #5ff281, #5f86f2, #a65ff2, #f25fd0, #f25f61, #f2cb5f) 0 50%; /*You can use a gradient of your choosing. I generated this one online.*/
  background-size: 300% 300%; /*Setting the background size to a large number since we will be animating the background position via keyframes.*/
  animation:  gradient-animation 2.5s alternate infinite; /*Applying the keyframe animation.*/
  border-radius: 8px; /*Rounds the corners a little.*/
  z-index: -1; /*Sends the the gradient background to the back of the card.*/
}

/* NAVBAR STYLING STARTS */
.navbar {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 30px;
  background-color: teal;
  color: #fff;
 }
 .nav-links a {
  color: #fff;
 }
 /* LOGO */
 
 /* NAVBAR MENU */
 .menu {
  display: flex;
  gap: 6em;
  font-size: 16px;
 }
 .menu li:hover {
  background-color: #4c9e9e;
  border-radius: 5px;
  transition: 0.3s ease;
 }
 .menu li {
  padding: 5px 14px;
 }
/*image gallery*/


.colbutton {
  display: inline-block;
  text-decoration: none;
  color: #fff;
  padding: 3px;
  border-radius: 6px;
  position: relative;
  overflow: hidden; /* Hides the overflowing ::before pseudo-element. */
}

.colbutton::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 200%; /*Making the width double the size of the parent since we are going to be animation the transform: translateX() to the left. */
  height: 100%;
  background: linear-gradient(115deg, #4fcf70, #fad648, #a767e5, #12bcfe, #44ce7b);
  background-size: 50% 100%;
  border-radius: inherit;
}

.colbutton:hover::before {
  animation: animate_border .75s linear infinite;
}

.colbutton span {
  display: block;
  background-color: #000;
  padding: 13px 40px;
 
  border-radius: 3px;
  position: relative;
  z-index: 2;
}

@keyframes animate_border {
  to {
      transform: translateX(-50%)
  }
}